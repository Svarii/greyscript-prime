// Highlight list item
// @description **Description:**
// @description Add a highlight to the specificed list index
// @description ---
//
// @description **Parameters:**
// @param {list<string>} menuList
// @param {number} selectedItem
// @param {string} [highlightcolor]
// @param {string} [textColor]
//
// @description - `menuList`:`<list><string>`
// @description - `selectedItem`:`<number>`
// @description - `highlightcolor`:`<#HEXA / #RRGGBBAA>`
// @description - `textColor`:`<string>`
//
// @description **Parameter Defaults:**
// @description - `highlightcolor`:`#FFFF002C`
//
// @description **Return:**
// @return {list<string>}
// @description `list` List with marked index
// @description ---
//    
// @description **Author:** Svarii
// @description **Version:** 0.0.1
// @description ---   
display_menu = function(menuList, selectedItem, highlightcolor = "#FFFF002C", textColor = null)
    locals.outputMenu = []
    for menuItem in locals.menuList
        if locals.selectedItem == __menuItem_idx then
            if locals.textColor == null then
                locals.outputMenu.push(locals.menuItem.mark(locals.highlightcolor))
            else
                locals.outputMenu.push(locals.menuItem.color(locals.textColor).mark(locals.highlightcolor))
            end if
        else
            locals.outputMenu.push(locals.menuItem)
        end if
    end for
    return locals.outputMenu
end function

user_navigation = function (numberIndex, userInput)
    indexChange = numberIndex
    if locals.userInput == "UpArrow" then
        locals.indexChange = locals.indexChange - 1
    end if
    if locals.userInput == "DownArrow" then
        locals.indexChange = locals.indexChange + 1
    end if
    return locals.indexChange
end function

keepAlive = true
myMenu = ["item 1", "item2", "item3", "item4"]
menuSelection = 0

while not userInput ==  "LeftArrow"
    clear_screen
    menu = display_menu(myMenu, menuSelection)
    for line in menu
        print line
    end for
    menuSelection = (user_navigation(menuSelection, user_input("", false, true))).clamp(0, (myMenu.len - 1))
end while 