{
  "str_textmeshpro: italic": {
    "prefix": "strtmp_italic",
    "scope": "greyscript",
    "description": "Insert italic (full, with header).",
    "body": [
      "// Applies italic tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the italic tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:** `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<i>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.italic",
      "    //  @example ",
      "    //  print(result); // Outputs: <i>Hello</i>         ",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Italic](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextBoldItalic.html)\t",
      "    // @description ---\t    ",
      "string.italic = function()",
      "    return \"<i>\" + self + \"</i>\"",
      "end function    "
    ]
  },
  "str_textmeshpro: line_indent": {
    "prefix": "strtmp_line_indent",
    "scope": "greyscript",
    "description": "Insert line_indent (full, with header).",
    "body": [
      "// Applies line-indent tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string to wrap it in the `<line-indent>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [indentPercent]",
      "    // @description - `indentPercent` Accepted Input: `em`, `px`, and `%`",
      "    // @param {boolean} [closeTag]",
      "    // @description - `closeTag` Accepted values: `true` or `false`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `indentPercent`:`15%`",
      "    // @description - `closeTag`:`true`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` the string value embedded in (or appended to) the `<line-indent>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    // @description ---        ",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text Indentation](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextIndentation.html)",
      "    // @description ---       ",
      "    // @description ***footnotes***   ",
      "    // @description Parameters are not checked for validity   ",
      "    // @description - `indentPercent` will not reject invalid values | **Return**: `string<withParseIssues>`",
      "    // @description - `closeTag` will not reject invalid values | **Return**: `null`",
      "    // @description",
      "    // @description If all parameters passed are invalid | **Return**: `null`",
      "    // @description ---          ",
      "    //",
      "    // @return {string}",
      "    // @example newString = \"Hello\"",
      "    // @example ",
      "    // @example result = newString.line-indent        ",
      "    // @example        ",
      "    // print(result); // Outputs: <line-indent=15%>Hello</indent>",
      "    // @example            ",
      "    // @example result = newString.line-indent(\"3em\")",
      "    // @example        ",
      "    // print(result); // Outputs: <line-indent=3em>Hello</indent>",
      "    // @example            ",
      "    // @example result = newString.line-indent(\"25px\", false)",
      "    // @example        ",
      "    // print(result); // Outputs: <line-indent=25px>Hello            ",
      "string.line_indent = function(lineIndent = \"15%\", closeTag = true)",
      "    if locals.closeTag == false then",
      "        return \"<line-indent=\" + locals.lineIndent + \">\" + self",
      "    else",
      "        return \"<line-indent=\" + locals.lineIndent + \">\" + self + \"</line-indent>\"",
      "    end if",
      "    return null",
      "end function    "
    ]
  },
  "str_textmeshpro: lowercase": {
    "prefix": "strtmp_lowercase",
    "scope": "greyscript",
    "description": "Insert lowercase (full, with header).",
    "body": [
      "// Applies lowercase tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wraping it within the lowercase tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:** `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<lowercase>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Lowercase](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextLetterCase.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.lowercase",
      "    //  @example ",
      "    //  print(result); // Outputs: <lowercase>Hello</lowercase>          ",
      "string.lowercase = function()",
      "    return \"<lowercase>\" + self + \"</lowercase>\"",
      "end function    "
    ]
  },
  "str_textmeshpro: margin": {
    "prefix": "strtmp_margin",
    "scope": "greyscript",
    "description": "Insert margin (full, with header).",
    "body": [
      "// Applies margin tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the margin tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [margin]",
      "    // @description - `margin`:`string` | `Accepted values`: `em`, `px`, `%`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `margin`:`5em`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<margin>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Margin](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextMargins.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.margin",
      "    //  @example ",
      "    //  print(result); // Outputs: <margin=5em>Hello</margin>           ",
      "string.margin = function(marginSpace = \"5em\")",
      "    return \"<margin=\" + locals.marginSpace + \">\" + self + \"</margin>\"",
      "end function ",
      ""
    ]
  },
  "str_textmeshpro: align": {
    "prefix": "strtmp_align",
    "scope": "greyscript",
    "description": "Insert align (full, with header).",
    "body": [
      "// Applies align tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string to wrap it in the align tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [alignment]",
      "    // @description - `alignment` Accepted values: `left`, `center`, `right`, `justified`, and `flush`",
      "    // @param {boolean} [closeTag]",
      "    // @description - `closeTag` Accepted values: `true` or `false`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `alignment`:`center`",
      "    // @description - `closeTag`:`true`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` the string value embedded in (or preceded by) the `<align>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    // @example newString = \"Hello\"",
      "    // @example ",
      "    // @example result = newString.align(\"center\")",
      "    // @example ",
      "    // print result // Output: <align=\"center\">Hello</align>",
      "    // @example         ",
      "    // @example result = newString.align(\"center\", false)",
      "    // @example ",
      "    // print result // Output: <align=\"center\">Hello",
      "    // @description ---        ",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text Alignment](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextAlignment.html)",
      "    // @description ---       ",
      "    // @description ***footnotes***   ",
      "    // @description Parameters are not checked for validity   ",
      "    // @description - `alignment` will not reject invalid values | **Return**: `string<withParseIssues>`",
      "    // @description - `closeTag` will not reject invalid values | **Return**: `null`",
      "    // @description",
      "    // @description If all paramaters passed are invalid | **Return**: `null`",
      "    // @description ---  ",
      "string.align = function(alignment = \"center\", closeTag = true)",
      "    locals.newString = \"<align=\" + locals.alignment + \">\" + self",
      "    if locals.closeTag == true then locals.newString = locals.newString + \"</align>\"",
      "    return locals.newString",
      "end function        "
    ]
  },
  "str_textmeshpro: alpha": {
    "prefix": "strtmp_alpha",
    "scope": "greyscript",
    "description": "Insert alpha (full, with header).",
    "body": [
      "// Applies alpha tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string and prepends it with the alpha tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [hexOpacity]",
      "    // @description - `hexOpacity` Accepted values: 2 digit HEX value preceded by #",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `hexOpacity`:`#FF`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` the string value preceded by the `<alpha>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text Opacity](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextOpacity.html)",
      "    // @description ---",
      "    //    ",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    // @description ***footnotes***   ",
      "    // @description Parameters are not checked for validity   ",
      "    // @description - `hexOpacity` will not reject invalid values | **Return**: `string<withParseIssues>`",
      "    // @description - does not apply a closing tag and affects all text that follows",
      "    // @description - will apply transparancy (default) #FF if no paramaters are passed",
      "    // @description ---        ",
      "    //",
      "    // @example newString = \"Hello\"",
      "    // @example ",
      "    // @example result = newString.alpha(\"#4C\")",
      "    // @example ",
      "    // print(result); // Output: <alpha=#4C>Hello",
      "    // @example ",
      "    // @example result = newString.alpha",
      "    // @example ",
      "    // print(result); // Output: <alpha=#FF>Hello    ",
      "string.alpha = function(hexOpacity = \"#FF\")",
      "    return \"<alpha=\" + locals.hexOpacity + \">\" + self",
      "end function"
    ]
  },
  "str_textmeshpro: bold": {
    "prefix": "strtmp_bold",
    "scope": "greyscript",
    "description": "Insert bold (full, with header).",
    "body": [
      "// Applies bold tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string and wraps within the bold tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description - None",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` the string value embedded in the `<b>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text Bold](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextBoldItalic.html)",
      "    // @description ---",
      "    //    ",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---     ",
      "    //",
      "    // @example newString = \"Hello\"",
      "    // @example ",
      "    // @example result = newString.bold",
      "    // @example ",
      "    // print(result); // Output: <b>Hello</b>          ",
      "    // @description --- ",
      "string.bold = function()",
      "    return \"<b>\" + self + \"</b>\"",
      "end function  "
    ]
  },
  "str_textmeshpro: color": {
    "prefix": "strtmp_color",
    "scope": "greyscript",
    "description": "Insert color (full, with header).",
    "body": [
      "// Applies color tag to the string",
      "\t// @description **Description:**",
      "\t// @description Modifies a text string by wrapping it within the color tag",
      "\t// @description ---",
      "\t//",
      "\t// @description **Parameters:**",
      "\t// @param {string} colorValue ",
      "\t// @description - `colorValue` The desired color in `#RRGGBB` / `#RRGGBBAA` / `#HEXA` format",
      "\t//",
      "\t// @description **Return:**",
      "\t// @return {string}",
      "\t// @description `string` the string value embedded in the `<color>` tag",
      "\t// @description ---",
      "\t//",
      "\t// @description **Links:**",
      "\t// @description - [Text Mesh Pro: Rich Color Text](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextColor.html)\t",
      "\t// @description - [HTML Color Names: Supported Name List](https://htmlcolorcodes.com/color-names/)",
      "\t// @description ---\t",
      "\t//",
      "\t// @description **Author:** Svarii",
      "\t// @description **Version:** 0.0.1",
      "\t// @description ---",
      "\t//",
      "\t// @description ***footnotes***",
      "\t// @description Color names are case sensitive",
      "\t// @description ---",
      "\t//",
      "\t// @example newString = \"Hello\"   ",
      "\t// @example ",
      "\t// @example result = newString.color(\"blue\")",
      "\t// @example     ",
      "\t// print(result); // Outputs: <color=blue>Hello</color>",
      "\t// @example        ",
      "\t// @example result = newString.color(\"#FFFFFF\")",
      "\t// @example   ",
      "\t// print(result); // Outputs: <color=#FFFFFF>Hello</color>",
      "\t// @example        ",
      "\t// @example result = newString.color(\"Aquamarine\")",
      "\t// @example   ",
      "\t// print(result); // Outputs: <color=#7FFFD4>Hello</color>        ",
      "string.color = function(colorValue)",
      "\tif not typeof(colorValue) == \"string\" then return self",
      "\t//*****************************************************",
      "\t// Red HEX Codes",
      "\t//*****************************************************\t",
      "\tif colorValue == \"IndianRed\" then colorValue = \"#CD5C5C\"",
      "\tif colorValue == \"LightCoral\" then colorValue = \"#F08080\"",
      "\tif colorValue == \"Salmon\" then colorValue = \"#FA8072\"",
      "\tif colorValue == \"DarkSalmon\" then colorValue = \"#E9967A\"",
      "\tif colorValue == \"LightSalmon\" then colorValue = \"#FFA07A\"\t\t\t",
      "\tif colorValue == \"Crimson\" then colorValue = \"#DC143C\"",
      "\tif colorValue == \"Red\" then colorValue = \"#FF0000\"",
      "\tif colorValue == \"FireBrick\" then colorValue = \"#B22222\"",
      "\tif colorValue == \"DarkRed\" then colorValue = \"#8B0000\"",
      "\t//*****************************************************",
      "\t// Pink HEX Codes",
      "\t//*****************************************************\t\t",
      "\tif colorValue == \"Pink\" then colorValue = \"#FFC0CB\"",
      "\tif colorValue == \"LightPink\" then colorValue = \"#FFB6C1\"\t\t",
      "\tif colorValue == \"HotPink\" then colorValue = \"#FF69B4\"\t\t",
      "\tif colorValue == \"DeepPink\" then colorValue = \"#FF1493\"\t\t",
      "\tif colorValue == \"MediumVioletRed\" then colorValue = \"#C71585\"\t\t\t\t",
      "\tif colorValue == \"PaleVioletRed\" then colorValue = \"#DB7093\"\t\t\t\t",
      "\t//*****************************************************",
      "\t// Orange HEX Codes",
      "\t//*****************************************************\t\t\t\t\t",
      "\tif colorValue == \"Coral\" then colorValue = \"#FF7F50\"\t\t\t\t\t\t",
      "\tif colorValue == \"Tomato\" then colorValue = \"#FF6347\"\t\t\t\t",
      "\tif colorValue == \"OrangeRed\" then colorValue = \"#FF4500\"\t\t\t\t\t\t",
      "\tif colorValue == \"DarkOrange\" then colorValue = \"#FF8C00\"\t\t\t\t",
      "\tif colorValue == \"Orange\" then colorValue = \"#FFA500\"\t\t\t\t\t\t",
      "\t//*****************************************************",
      "\t// Yellow HEX Codes",
      "\t//*****************************************************",
      "\tif colorValue == \"Gold\" then colorValue = \"#FFD700\"",
      "\tif colorValue == \"Yellow\" then colorValue = \"#FFFF00\"",
      "\tif colorValue == \"LightYellow\" then colorValue = \"#FFFFE0\"",
      "\tif colorValue == \"LemonChiffon\" then colorValue = \"#FFFACD\"",
      "\tif colorValue == \"LightGoldenrodYellow\" then colorValue = \"#FAFAD2\"        ",
      "\tif colorValue == \"PapayaWhip\" then colorValue = \"#FFEFD5\"",
      "\tif colorValue == \"Moccasin\" then colorValue = \"#FFE4B5\"",
      "\tif colorValue == \"PeachPuff\" then colorValue = \"#FFDAB9\"",
      "\tif colorValue == \"PaleGoldenrod\" then colorValue = \"#EEE8AA\"",
      "\tif colorValue == \"Khaki\" then colorValue = \"#F0E68C\"                                \t\t\t\t\t",
      "\tif colorValue == \"DarkKhaki\" then colorValue = \"#BDB76B\"                                \t\t\t\t\t        ",
      "\t//*****************************************************",
      "\t// Purple HEX Codes",
      "\t//*****************************************************",
      "\tif colorValue == \"Lavender\" then colorValue = \"#E6E6FA\"",
      "\tif colorValue == \"Thistle\" then colorValue = \"#D8BFD8\"",
      "\tif colorValue == \"Plum\" then colorValue = \"#DDA0DD\"",
      "\tif colorValue == \"Violet\" then colorValue = \"#EE82EE\"",
      "\tif colorValue == \"Orchid\" then colorValue = \"#DA70D6\"        ",
      "\tif colorValue == \"Fuchsia\" then colorValue = \"#FF00FF\"",
      "\tif colorValue == \"Magenta\" then colorValue = \"#FF00FF\"",
      "\tif colorValue == \"MediumOrchid\" then colorValue = \"#BA55D3\"",
      "\tif colorValue == \"MediumPurple\" then colorValue = \"#9370DB\"",
      "\tif colorValue == \"RebeccaPurple\" then colorValue = \"#663399\"                                \t\t\t\t\t",
      "\tif colorValue == \"BlueViolet\" then colorValue = \"#8A2BE2\"",
      "\tif colorValue == \"DarkViolet\" then colorValue = \"#9400D3\"",
      "\tif colorValue == \"DarkOrchid\" then colorValue = \"#9932CC\"",
      "\tif colorValue == \"DarkMagenta\" then colorValue = \"#8B008B\"",
      "\tif colorValue == \"Purple\" then colorValue = \"#800080\"",
      "\tif colorValue == \"Indigo\" then colorValue = \"#4B0082\"        ",
      "\tif colorValue == \"SlateBlue\" then colorValue = \"#6A5ACD\"",
      "\tif colorValue == \"DarkSlateBlue\" then colorValue = \"#483D8B\"",
      "\t//*****************************************************",
      "\t// Green HEX Codes",
      "\t//*****************************************************",
      "\tif colorValue == \"GreenYellow\" then colorValue = \"#ADFF2F\"",
      "\tif colorValue == \"Chartreuse\" then colorValue = \"#7FFF00\"",
      "\tif colorValue == \"LawnGreen\" then colorValue = \"#7CFC00\"",
      "\tif colorValue == \"Lime\" then colorValue = \"#00FF00\"",
      "\tif colorValue == \"LimeGreen\" then colorValue = \"#32CD32\"        ",
      "\tif colorValue == \"PaleGreen\" then colorValue = \"#98FB98\"",
      "\tif colorValue == \"LightGreen\" then colorValue = \"#90EE90\"",
      "\tif colorValue == \"MediumSpringGreen\" then colorValue = \"#00FA9A\"",
      "\tif colorValue == \"SpringGreen\" then colorValue = \"#00FF7F\"",
      "\tif colorValue == \"SeaGreen\" then colorValue = \"#2E8B57\"",
      "\tif colorValue == \"ForestGreen\" then colorValue = \"#228B22\"                                \t\t\t\t\t",
      "\tif colorValue == \"Green\" then colorValue = \"#008000\"",
      "\tif colorValue == \"DarkGreen\" then colorValue = \"#006400\"",
      "\tif colorValue == \"YellowGreen\" then colorValue = \"#9ACD32\"",
      "\tif colorValue == \"OliveDrab\" then colorValue = \"#6B8E23\"",
      "\tif colorValue == \"Olive\" then colorValue = \"#808000\"",
      "\tif colorValue == \"DarkOliveGreen\" then colorValue = \"#556B2F\"        ",
      "\tif colorValue == \"MediumAquamarine\" then colorValue = \"#66CDAA\"",
      "\tif colorValue == \"DarkSeaGreen\" then colorValue = \"#8FBC8B\"",
      "\tif colorValue == \"LightSeaGreen\" then colorValue = \"#20B2AA\" ",
      "\tif colorValue == \"DarkCyan\" then colorValue = \"#008B8B\"        ",
      "\tif colorValue == \"Teal\" then colorValue = \"#008080\"",
      "\t//*****************************************************",
      "\t// Blue HEX Codes",
      "\t//*****************************************************\t",
      "\tif colorValue == \"Aqua\" then colorValue = \"#00FFFF\"",
      "\tif colorValue == \"Cyan\" then colorValue = \"#00FFFF\"",
      "\tif colorValue == \"LightCyan\" then colorValue = \"#E0FFFF\"",
      "\tif colorValue == \"PaleTurquoise\" then colorValue = \"#AFEEEE\"",
      "\tif colorValue == \"Aquamarine\" then colorValue = \"#7FFFD4\"        ",
      "\tif colorValue == \"Turquoise\" then colorValue = \"#40E0D0\"",
      "\tif colorValue == \"MediumTurquoise\" then colorValue = \"#48D1CC\"",
      "\tif colorValue == \"DarkTurquoise\" then colorValue = \"#00CED1\"",
      "\tif colorValue == \"CadetBlue\" then colorValue = \"#5F9EA0\"",
      "\tif colorValue == \"SteelBlue\" then colorValue = \"#4682B4\"                           \t\t\t\t\t",
      "\tif colorValue == \"LightSteelBlue\" then colorValue = \"#B0C4DE\"",
      "\tif colorValue == \"PowderBlue\" then colorValue = \"#B0E0E6\"",
      "\tif colorValue == \"LightBlue\" then colorValue = \"#ADD8E6\"",
      "\tif colorValue == \"SkyBlue\" then colorValue = \"#87CEEB\"",
      "\tif colorValue == \"LightSkyBlue\" then colorValue = \"#87CEFA\"",
      "\tif colorValue == \"DeepSkyBlue\" then colorValue = \"#00BFFF\"        ",
      "\tif colorValue == \"DodgerBlue\" then colorValue = \"#1E90FF\"",
      "\tif colorValue == \"CornflowerBlue\" then colorValue = \"#6495ED\"",
      "\tif colorValue == \"MediumSlateBlue\" then colorValue = \"#7B68EE\"",
      "\tif colorValue == \"RoyalBlue\" then colorValue = \"#4169E1\"",
      "\tif colorValue == \"Blue\" then colorValue = \"#0000FF\"",
      "\tif colorValue == \"MediumBlue\" then colorValue = \"#0000CD\"",
      "\tif colorValue == \"DarkBlue\" then colorValue = \"#00008B\"  ",
      "\tif colorValue == \"Navy\" then colorValue = \"#000080\"",
      "\tif colorValue == \"MidnightBlue\" then colorValue = \"#191970\"                        ",
      "\t//*****************************************************",
      "\t// Brown HEX Codes",
      "\t//*****************************************************\t",
      "\tif colorValue == \"Cornsilk\" then colorValue = \"#FFF8DC\"",
      "\tif colorValue == \"BlanchedAlmond\" then colorValue = \"#FFEBCD\"",
      "\tif colorValue == \"Bisque\" then colorValue = \"#FFE4C4\"",
      "\tif colorValue == \"NavajoWhite\" then colorValue = \"#FFDEAD\"",
      "\tif colorValue == \"Wheat\" then colorValue = \"#F5DEB3\"        ",
      "\tif colorValue == \"BurlyWood\" then colorValue = \"#DEB887\"",
      "\tif colorValue == \"Tan\" then colorValue = \"#D2B48C\"",
      "\tif colorValue == \"RosyBrown\" then colorValue = \"#BC8F8F\"",
      "\tif colorValue == \"SandyBrown\" then colorValue = \"#F4A460\"",
      "\tif colorValue == \"Goldenrod\" then colorValue = \"#DAA520\"                                \t\t\t\t\t",
      "\tif colorValue == \"DarkGoldenrod\" then colorValue = \"#B8860B\"",
      "\tif colorValue == \"Peru\" then colorValue = \"#CD853F\"",
      "\tif colorValue == \"Chocolate\" then colorValue = \"#D2691E\"",
      "\tif colorValue == \"SaddleBrown\" then colorValue = \"#8B4513\"",
      "\tif colorValue == \"Sienna\" then colorValue = \"#A0522D\"",
      "\tif colorValue == \"Brown\" then colorValue = \"#A52A2A\"        ",
      "\tif colorValue == \"Maroon\" then colorValue = \"#800000\"          \t\t\t",
      "\t//*****************************************************",
      "\t// White HEX Codes",
      "\t//*****************************************************\t",
      "\tif colorValue == \"White\" then colorValue = \"#FFFFFF\"",
      "\tif colorValue == \"Snow\" then colorValue = \"#FFFAFA\"",
      "\tif colorValue == \"HoneyDew\" then colorValue = \"#F0FFF0\"",
      "\tif colorValue == \"MintCream\" then colorValue = \"#F5FFFA\"",
      "\tif colorValue == \"Azure\" then colorValue = \"#F0FFFF\"        ",
      "\tif colorValue == \"AliceBlue\" then colorValue = \"#F0F8FF\"",
      "\tif colorValue == \"GhostWhite\" then colorValue = \"#F8F8FF\"",
      "\tif colorValue == \"WhiteSmoke\" then colorValue = \"#F5F5F5\"",
      "\tif colorValue == \"SeaShell\" then colorValue = \"#FFF5EE\"",
      "\tif colorValue == \"Beige\" then colorValue = \"#F5F5DC\"                                \t\t\t\t\t",
      "\tif colorValue == \"OldLace\" then colorValue = \"#FDF5E6\"",
      "\tif colorValue == \"FloralWhite\" then colorValue = \"#FFFAF0\"",
      "\tif colorValue == \"Ivory\" then colorValue = \"#FFFFF0\"",
      "\tif colorValue == \"AntiqueWhite\" then colorValue = \"#FAEBD7\"",
      "\tif colorValue == \"Linen\" then colorValue = \"#FAF0E6\"",
      "\tif colorValue == \"LavenderBlush\" then colorValue = \"#FFF0F5\"        ",
      "\tif colorValue == \"MistyRose\" then colorValue = \"#FFE4E1\"",
      "\t//*****************************************************",
      "\t// Grey HEX Codes",
      "\t//*****************************************************\t",
      "\tif colorValue == \"Gainsboro\" then colorValue = \"#DCDCDC\"",
      "\tif colorValue == \"LightGray\" then colorValue = \"#D3D3D3\"",
      "\tif colorValue == \"Silver\" then colorValue = \"#C0C0C0\"",
      "\tif colorValue == \"DarkGray\" then colorValue = \"#A9A9A9\"",
      "\tif colorValue == \"Gray\" then colorValue = \"#808080\"        ",
      "\tif colorValue == \"DimGray\" then colorValue = \"#696969\"",
      "\tif colorValue == \"LightSlateGray\" then colorValue = \"#778899\"",
      "\tif colorValue == \"SlateGray\" then colorValue = \"#708090\"",
      "\tif colorValue == \"DarkSlateGray\" then colorValue = \"#2F4F4F\"",
      "\tif colorValue == \"Black\" then colorValue = \"#000000\"",
      "\t//*****************************************************                                      \t\t\t\t\t   \t",
      "\treturn \"<color=\" + colorValue + \">\" + self + \"</color>\"",
      "end function",
      "",
      ""
    ]
  },
  "str_textmeshpro: cspace": {
    "prefix": "strtmp_cspace",
    "scope": "greyscript",
    "description": "Insert cspace (full, with header).",
    "body": [
      "// Applies cspace tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the cspace tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} charSpacing",
      "    // @param {boolean} closeTag",
      "    // @description - `charSpacing`",
      "    // @description - `closeTag`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within `<cspace>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Character Spaceing](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextCharacterSpacing.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    // @description ***footnotes***",
      "    // @description Accepts pixels or font unit",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.cspace",
      "    //  @example ",
      "    //  print(result); // Outputs: <cspace=1em>Hello</cspace> ",
      "string.cspace = function(charSpacing = \"1em\", closeTag = true)",
      "    if locals.closeTag == true then",
      "        return \"<cspace=\" + locals.charSpacing + \">\" + self + \"</cspace>\"",
      "    end if",
      "    if locals.closeTag == false then",
      "        return \"<cspace=\" + locals.charSpacing + \">\" + self",
      "    end if        ",
      "end function ",
      "",
      ""
    ]
  },
  "str_textmeshpro: indent": {
    "prefix": "strtmp_indent",
    "scope": "greyscript",
    "description": "Insert indent (full, with header).",
    "body": [
      "// Applies indent tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string to wrap it in the `<indent>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [indentPercent]",
      "    // @description - `indentPercent` Accepted Input: `em`, `px`, and `%`",
      "    // @param {boolean} [closeTag]",
      "    // @description - `closeTag` Accepted values: `true` or `false`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `indentPercent`:`15%`",
      "    // @description - `closeTag`:`true`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` the string value embedded in (or appended to) the `<indent>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    // @description ---        ",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text Indentation](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextIndentation.html)",
      "    // @description ---       ",
      "    // @description ***footnotes***   ",
      "    // @description Parameters are not checked for validity   ",
      "    // @description - `indentPercent` will not reject invalid values | **Return**: `string<withParseIssues>`",
      "    // @description - `closeTag` will not reject invalid values | **Return**: `null`",
      "    // @description",
      "    // @description If all parameters passed are invalid | **Return**: `null`",
      "    // @description ---          ",
      "    //",
      "    // @return {string}",
      "    // @example newString = \"Hello\"",
      "    // @example ",
      "    // @example result = newString.indent        ",
      "    // @example        ",
      "    // print(result); // Outputs: <indent=15%>Hello</indent>",
      "    // @example            ",
      "    // @example result = newString.indent(\"3em\")",
      "    // @example        ",
      "    // print(result); // Outputs: <indent=3em>Hello</indent>",
      "    // @example            ",
      "    // @example result = newString.indent(\"25px\", false)",
      "    // @example        ",
      "    // print(result); // Outputs: <indent=25px>Hello        ",
      "string.indent = function(indentPercent=\"15%\", closeTag = true)",
      "    if locals.closeTag == false then",
      "        return \"<indent=\" + locals.indentPercent + \">\" + self",
      "    else",
      "        return \"<indent=\" + locals.indentPercent + \">\" + self + \"</indent>\"",
      "    end if",
      "    return null",
      "end function "
    ]
  },
  "str_textmeshpro: mspace": {
    "prefix": "strtmp_mspace",
    "scope": "greyscript",
    "description": "Insert mspace (full, with header).",
    "body": [
      "// Applies mark tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the mspace tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [monospace]",
      "    // @description - `monospace`:`string` | `Accepted values`: `em`, `px`, `%`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `monospace`:`2.75em`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<mspace>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Monospacing](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextMonospace.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.mspace",
      "    //  @example ",
      "    //  print(result); // Outputs: <mspace=\"2.75em\">Hello</mspace>     ",
      "string.mspace = function(monospace = \"2.75em\")",
      "    return \"<mspace=\" + locals.monospace + \">\" + self + \"</mspace>\"",
      "end function   "
    ]
  },
  "str_textmeshpro: nobr": {
    "prefix": "strtmp_nobr",
    "scope": "greyscript",
    "description": "Insert nobr (full, with header).",
    "body": [
      "// Applies nobr tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wraping it within the nobr tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<nobr>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description [Text Mesh Pro: Rich Text No Break](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextNoBreak.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.nobr",
      "    //  @example ",
      "    //  print(result); // Output: <nobr>Hello</nobr>     ",
      "string.nobr = function()",
      "    return \"<nobr>\" + self + \"</nobr>\"",
      "end function "
    ]
  },
  "str_textmeshpro: noparse": {
    "prefix": "strtmp_noparse",
    "scope": "greyscript",
    "description": "Insert noparse (full, with header).",
    "body": [
      "// Applies noparse tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the noparse tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<noparse>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text Noparse](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextNoParse.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.noparse",
      "    //  @example ",
      "    //  print(result); // Output: <noparse>Hello</noparse>     ",
      "string.noparse = function()",
      "    return \"<noparse>\" + self + \"</noparse>\"",
      "end function  "
    ]
  },
  "str_textmeshpro: page": {
    "prefix": "strtmp_page",
    "scope": "greyscript",
    "description": "Insert page (full, with header).",
    "body": [
      " // Applies page tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the page tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value with the `<page>` tag appended to the end",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Page Break](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextPageBreak.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.page",
      "    //  @example ",
      "    //  print(result); // Output: Hello<page>   ",
      "    string.page = function()",
      "        return self + \"<page>\"",
      "    end function "
    ]
  },
  "str_textmeshpro: pos": {
    "prefix": "strtmp_pos",
    "scope": "greyscript",
    "description": "Insert pos (full, with header).",
    "body": [
      "// Applies pos arse tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by prepending it with the pos tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `position`",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `position`:`\"50%\"`    ",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string prepended with the `<pos>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Horizontal Position](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextPos.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.pos",
      "    //  @example ",
      "    //  print(result); // Output: <pos=50%>Hello",
      "string.pos = function(position = \"50%\")",
      "    return \"<pos=\" + locals.position + \">\" + self",
      "end function"
    ]
  },
  "str_textmeshpro: size": {
    "prefix": "strtmp_size",
    "scope": "greyscript",
    "description": "Insert size (full, with header).",
    "body": [
      "// Applies size tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the `<size>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `textSize`:`string`",
      "    //",
      "    // @description **Default Parameters:**",
      "    // @description * `textSize`:`\"5em\"`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string wrapped within the `<size>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Font Size](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextSize.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.size",
      "    //  @example ",
      "    //  print(result); // Output: <size=\"5em\">Hello </size>",
      "string.size = function(textSize = \"5em\")",
      "    return \"<size=\" + locals.textSize + \">\" + self + \"</size>\"",
      "end function"
    ]
  },
  "str_textmeshpro: strike": {
    "prefix": "strtmp_strike",
    "scope": "greyscript",
    "description": "Insert strike (full, with header).",
    "body": [
      "// Applies strike tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the strike tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @description * `none`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string wrapped within the `<s>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Strikethrough](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextStrikethroughUnderline.html)\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.strike",
      "    //  @example ",
      "    //  print(result); // Output: <s>Hello</s>",
      "    string.strike = function()",
      "        return \"<s>\" + self + \"</s>\"",
      "    end function"
    ]
  },
  "str_textmeshpro: mark": {
    "prefix": "strtmp_mark",
    "scope": "greyscript",
    "description": "Insert mark (full, with header).",
    "body": [
      "// Applies mark tag to the string",
      "    // @description **Description:**",
      "    // @description Modifies a text string by wrapping it within the mark tag",
      "    // @description ---",
      "    //",
      "    // @description **Parameters:**",
      "    // @param {string} [color]",
      "    // @description - `color`:`string` | #RRGGBBAA [ HEXA ] ",
      "    //",
      "    // @description **Parameter Defaults:**",
      "    // @description - `color`:`#FFFF00AA`",
      "    //",
      "    // @description **Return:**",
      "    // @return {string}",
      "    // @description `string` The string value wrapped within the `<mark>` tag",
      "    // @description ---",
      "    //",
      "    // @description **Links:**",
      "    // @description - [Text Mesh Pro: Rich Text mark](https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/RichTextMark.html  )\t",
      "    // @description ---\t",
      "    //",
      "    // @description **Author:** Svarii",
      "    // @description **Version:** 0.0.1",
      "    // @description ---",
      "    //",
      "    //  @example newString = \"Hello\"",
      "    //  @example ",
      "    //  @example result = newString.mark",
      "    //  @example ",
      "    //  print(result); // Outputs: <mark=\"#FFFF00AA\">Hello</mark>   ",
      "string.mark = function(color=\"#FFFF00BF\")",
      "    return \"<mark=\" + locals.color + \">\" + self + \"</mark>\"",
      "end function ",
      ""
    ]
  }
}